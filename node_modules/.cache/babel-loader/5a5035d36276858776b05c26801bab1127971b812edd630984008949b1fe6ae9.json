{"ast":null,"code":"var _jsxFileName = \"/Users/dev/Documents/project/school-management-system/src/dashboard/ViewSubject.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ViewSubject = () => {\n  _s();\n  // Example Data (Replace with actual data or API response)\n  const data = [{\n    subject: \"Math\",\n    staffName: \"John Doe\"\n  }, {\n    subject: \"Science\",\n    staffName: \"Jane Smith\"\n  }, {\n    subject: \"History\",\n    staffName: \"Alice Johnson\"\n  }, {\n    subject: \"English\",\n    staffName: \"Bob Lee\"\n  }, {\n    subject: \"Art\",\n    staffName: \"Sara K\"\n  }, {\n    subject: \"Geography\",\n    staffName: \"Mark T\"\n  }, {\n    subject: \"Physics\",\n    staffName: \"Emily R\"\n  }\n  // Add more items as needed\n  ];\n\n  // Pagination state\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n\n  // Handle pagination change\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  // Handle rows per page change\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0); // Reset to first page on rows per page change\n  };\n\n  // Get the data to display based on the current page and rows per page\n  const currentData = data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      width: \"100%\",\n      overflow: \"hidden\",\n      padding: 50\n    },\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"S.No\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Subject\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Staff Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: currentData.map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: page * rowsPerPage + index + 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.subject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: row.staffName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 33\n            }, this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: data.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ViewSubject, \"OeamEqfqYGafDj9X5k7ZYjy/zXo=\");\n_c = ViewSubject;\nexport default ViewSubject;\nvar _c;\n$RefreshReg$(_c, \"ViewSubject\");","map":{"version":3,"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","TablePagination","Paper","jsxDEV","_jsxDEV","ViewSubject","_s","data","subject","staffName","page","setPage","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","target","value","currentData","slice","sx","width","overflow","padding","children","fileName","_jsxFileName","lineNumber","columnNumber","map","row","index","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["/Users/dev/Documents/project/school-management-system/src/dashboard/ViewSubject.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { Table, TableBody, TableCell, TableContainer, TableHead, TableRow, TablePagination, Paper } from \"@mui/material\";\n\nconst ViewSubject = () => {\n    // Example Data (Replace with actual data or API response)\n    const data = [\n        { subject: \"Math\", staffName: \"John Doe\" },\n        { subject: \"Science\", staffName: \"Jane Smith\" },\n        { subject: \"History\", staffName: \"Alice Johnson\" },\n        { subject: \"English\", staffName: \"Bob Lee\" },\n        { subject: \"Art\", staffName: \"Sara K\" },\n        { subject: \"Geography\", staffName: \"Mark T\" },\n        { subject: \"Physics\", staffName: \"Emily R\" },\n        // Add more items as needed\n    ];\n\n    // Pagination state\n    const [page, setPage] = useState(0);\n    const [rowsPerPage, setRowsPerPage] = useState(5);\n\n    // Handle pagination change\n    const handleChangePage = (event, newPage) => {\n        setPage(newPage);\n    };\n\n    // Handle rows per page change\n    const handleChangeRowsPerPage = (event) => {\n        setRowsPerPage(parseInt(event.target.value, 10));\n        setPage(0); // Reset to first page on rows per page change\n    };\n\n    // Get the data to display based on the current page and rows per page\n    const currentData = data.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage);\n\n    return (\n        <Paper sx={{ width: \"100%\", overflow: \"hidden\", padding: 50 }}>\n            <TableContainer>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>S.No</TableCell>\n                            <TableCell>Subject</TableCell>\n                            <TableCell>Staff Name</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {currentData.map((row, index) => (\n                            <TableRow key={index}>\n                                <TableCell>{page * rowsPerPage + index + 1}</TableCell>\n                                <TableCell>{row.subject}</TableCell>\n                                <TableCell>{row.staffName}</TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </TableContainer>\n\n            {/* Pagination */}\n            <TablePagination\n                rowsPerPageOptions={[5, 10, 25]}\n                component=\"div\"\n                count={data.length}\n                rowsPerPage={rowsPerPage}\n                page={page}\n                onPageChange={handleChangePage}\n                onRowsPerPageChange={handleChangeRowsPerPage}\n            />\n        </Paper>\n    );\n};\n\nexport default ViewSubject;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}